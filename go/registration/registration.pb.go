// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registration.proto

package registration

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JoinToken struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ServiceId            string   `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinToken) Reset()         { *m = JoinToken{} }
func (m *JoinToken) String() string { return proto.CompactTextString(m) }
func (*JoinToken) ProtoMessage()    {}
func (*JoinToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_9eaf5ac8a9e594c3, []int{0}
}
func (m *JoinToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinToken.Unmarshal(m, b)
}
func (m *JoinToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinToken.Marshal(b, m, deterministic)
}
func (dst *JoinToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinToken.Merge(dst, src)
}
func (m *JoinToken) XXX_Size() int {
	return xxx_messageInfo_JoinToken.Size(m)
}
func (m *JoinToken) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinToken.DiscardUnknown(m)
}

var xxx_messageInfo_JoinToken proto.InternalMessageInfo

func (m *JoinToken) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *JoinToken) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

type AdminToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminToken) Reset()         { *m = AdminToken{} }
func (m *AdminToken) String() string { return proto.CompactTextString(m) }
func (*AdminToken) ProtoMessage()    {}
func (*AdminToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_registration_9eaf5ac8a9e594c3, []int{1}
}
func (m *AdminToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminToken.Unmarshal(m, b)
}
func (m *AdminToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminToken.Marshal(b, m, deterministic)
}
func (dst *AdminToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminToken.Merge(dst, src)
}
func (m *AdminToken) XXX_Size() int {
	return xxx_messageInfo_AdminToken.Size(m)
}
func (m *AdminToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminToken.DiscardUnknown(m)
}

var xxx_messageInfo_AdminToken proto.InternalMessageInfo

func (m *AdminToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*JoinToken)(nil), "JoinToken")
	proto.RegisterType((*AdminToken)(nil), "AdminToken")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistrationClient is the client API for Registration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistrationClient interface {
	Join(ctx context.Context, in *JoinToken, opts ...grpc.CallOption) (*AdminToken, error)
}

type registrationClient struct {
	cc *grpc.ClientConn
}

func NewRegistrationClient(cc *grpc.ClientConn) RegistrationClient {
	return &registrationClient{cc}
}

func (c *registrationClient) Join(ctx context.Context, in *JoinToken, opts ...grpc.CallOption) (*AdminToken, error) {
	out := new(AdminToken)
	err := c.cc.Invoke(ctx, "/Registration/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistrationServer is the server API for Registration service.
type RegistrationServer interface {
	Join(context.Context, *JoinToken) (*AdminToken, error)
}

func RegisterRegistrationServer(s *grpc.Server, srv RegistrationServer) {
	s.RegisterService(&_Registration_serviceDesc, srv)
}

func _Registration_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistrationServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Registration/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistrationServer).Join(ctx, req.(*JoinToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _Registration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Registration",
	HandlerType: (*RegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Registration_Join_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registration.proto",
}

func init() { proto.RegisterFile("registration.proto", fileDescriptor_registration_9eaf5ac8a9e594c3) }

var fileDescriptor_registration_9eaf5ac8a9e594c3 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x29, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72,
	0xe6, 0xe2, 0xf4, 0xca, 0xcf, 0xcc, 0x0b, 0xc9, 0xcf, 0x4e, 0xcd, 0x13, 0x12, 0xe7, 0x62, 0xcf,
	0xcb, 0x4f, 0x49, 0x8d, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x03, 0x71,
	0x3d, 0x53, 0x84, 0x64, 0xb9, 0xb8, 0x8a, 0x53, 0x8b, 0xca, 0x32, 0x93, 0xc1, 0x72, 0x4c, 0x60,
	0x39, 0x4e, 0xa8, 0x88, 0x67, 0x8a, 0x92, 0x12, 0x17, 0x97, 0x63, 0x4a, 0x2e, 0xcc, 0x14, 0x11,
	0x2e, 0xd6, 0x12, 0x10, 0x03, 0x6a, 0x06, 0x84, 0x63, 0x64, 0xc8, 0xc5, 0x13, 0x84, 0x64, 0xbd,
	0x90, 0x22, 0x17, 0x0b, 0xc8, 0x62, 0x21, 0x2e, 0x3d, 0xb8, 0xfd, 0x52, 0xdc, 0x7a, 0x08, 0x63,
	0x94, 0x18, 0x9c, 0x74, 0xb9, 0xc4, 0xf2, 0x8b, 0xd2, 0xf5, 0xb2, 0xd2, 0x8a, 0xf2, 0xd3, 0xf5,
	0x90, 0xdd, 0xee, 0x24, 0x88, 0x6c, 0x54, 0x00, 0xc8, 0x23, 0x01, 0x8c, 0x49, 0x6c, 0x60, 0x1f,
	0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xd2, 0x25, 0x33, 0xe7, 0x00, 0x00, 0x00,
}
